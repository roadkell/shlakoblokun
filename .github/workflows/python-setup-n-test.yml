# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
# https://github.com/actions/setup-python

name: "Python Setup and Test"

on:
  push:
    branches: ['main']
    paths:
      - '**.py'
    # paths-ignore:
    #   - '**/*.txt'
    #   - '**/*.md'
  pull_request:
    branches: ['main']
    paths:
      - '**.py'
    # paths-ignore:
    #   - '**/*.txt'
    #   - '**/*.md'
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      # fail-fast: false
      matrix:
        python-version: ["3.x"]

    steps:
      - name: List env vars
        run: env

      - name: Checkout repository
        uses: actions/checkout@v3

      # - name: Get pip cache dir
      #   id: pip-cache-dir
      #   run: |
      #     echo "::set-output name=dir::$(pip cache dir)"

      # - name: Cache pip modules
      #   uses: actions/cache@v3
      #   env:
      #     cache-name: cache-pip
      #   with:
      #     path: ${{ steps.pip-cache-dir.outputs.dir }}
      #     key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pip-

      # - if: ${{ steps.cache-pip.outputs.cache-hit != 'true' }}
      #   name: List the state of pip modules
      #   continue-on-error: true
      #   run: pip list

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          check-latest: true
          cache: 'pip'
          cache-dependency-path: '**/setup.py'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip  # setuptools wheel
          pip install flake8 flake8-tabs pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Show flake8 help
        run: flake8 --help

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --use-flake8-tabs --extend-ignore=E223,E501 --count
          --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # - name: Test with pytest
      #   run: |
      #     pytest
